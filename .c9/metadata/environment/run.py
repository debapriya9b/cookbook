{"filter":false,"title":"run.py","tooltip":"/run.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":122,"column":1},"end":{"row":122,"column":2},"action":"insert","lines":[" "],"id":2335},{"start":{"row":122,"column":2},"end":{"row":122,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":123,"column":0},"end":{"row":123,"column":1},"action":"insert","lines":[" "],"id":2336},{"start":{"row":123,"column":1},"end":{"row":123,"column":2},"action":"insert","lines":[" "]},{"start":{"row":123,"column":2},"end":{"row":123,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":125,"column":0},"end":{"row":125,"column":1},"action":"insert","lines":[" "],"id":2337},{"start":{"row":125,"column":1},"end":{"row":125,"column":2},"action":"insert","lines":[" "]},{"start":{"row":125,"column":2},"end":{"row":125,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":126,"column":0},"end":{"row":126,"column":1},"action":"insert","lines":[" "],"id":2338}],[{"start":{"row":126,"column":1},"end":{"row":126,"column":2},"action":"insert","lines":[" "],"id":2339},{"start":{"row":126,"column":2},"end":{"row":126,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":127,"column":0},"end":{"row":127,"column":1},"action":"insert","lines":[" "],"id":2340},{"start":{"row":127,"column":1},"end":{"row":127,"column":2},"action":"insert","lines":[" "]},{"start":{"row":127,"column":2},"end":{"row":127,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":128,"column":0},"end":{"row":128,"column":1},"action":"insert","lines":[" "],"id":2341}],[{"start":{"row":128,"column":1},"end":{"row":128,"column":2},"action":"insert","lines":[" "],"id":2342},{"start":{"row":128,"column":2},"end":{"row":128,"column":3},"action":"insert","lines":[" "]},{"start":{"row":129,"column":0},"end":{"row":129,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":127,"column":3},"end":{"row":127,"column":4},"action":"insert","lines":[" "],"id":2350},{"start":{"row":127,"column":4},"end":{"row":127,"column":5},"action":"insert","lines":[" "]},{"start":{"row":127,"column":5},"end":{"row":127,"column":6},"action":"insert","lines":[" "]}],[{"start":{"row":129,"column":1},"end":{"row":129,"column":2},"action":"insert","lines":[" "],"id":2351},{"start":{"row":129,"column":2},"end":{"row":129,"column":3},"action":"insert","lines":[" "]},{"start":{"row":129,"column":3},"end":{"row":129,"column":4},"action":"insert","lines":[" "]},{"start":{"row":129,"column":4},"end":{"row":129,"column":5},"action":"insert","lines":[" "]}],[{"start":{"row":129,"column":5},"end":{"row":129,"column":6},"action":"insert","lines":[" "],"id":2352}],[{"start":{"row":129,"column":6},"end":{"row":129,"column":7},"action":"insert","lines":[" "],"id":2353},{"start":{"row":129,"column":7},"end":{"row":129,"column":8},"action":"insert","lines":[" "]},{"start":{"row":129,"column":8},"end":{"row":129,"column":9},"action":"insert","lines":[" "]},{"start":{"row":129,"column":9},"end":{"row":129,"column":10},"action":"insert","lines":[" "]},{"start":{"row":129,"column":10},"end":{"row":129,"column":11},"action":"insert","lines":[" "]},{"start":{"row":129,"column":11},"end":{"row":129,"column":12},"action":"insert","lines":[" "]},{"start":{"row":129,"column":12},"end":{"row":129,"column":13},"action":"insert","lines":[" "]},{"start":{"row":129,"column":13},"end":{"row":129,"column":14},"action":"insert","lines":[" "]},{"start":{"row":129,"column":14},"end":{"row":129,"column":15},"action":"insert","lines":[" "]},{"start":{"row":129,"column":15},"end":{"row":129,"column":16},"action":"insert","lines":[" "]},{"start":{"row":129,"column":16},"end":{"row":129,"column":17},"action":"insert","lines":[" "]}],[{"start":{"row":129,"column":17},"end":{"row":129,"column":18},"action":"insert","lines":[" "],"id":2354},{"start":{"row":129,"column":18},"end":{"row":129,"column":19},"action":"insert","lines":[" "]},{"start":{"row":129,"column":19},"end":{"row":129,"column":20},"action":"insert","lines":[" "]},{"start":{"row":129,"column":20},"end":{"row":129,"column":21},"action":"insert","lines":[" "]},{"start":{"row":129,"column":21},"end":{"row":129,"column":22},"action":"insert","lines":[" "]},{"start":{"row":129,"column":22},"end":{"row":129,"column":23},"action":"insert","lines":[" "]}],[{"start":{"row":117,"column":0},"end":{"row":130,"column":39},"action":"remove","lines":["@app.route('/delete_recipe/recipe_id?=<id>')","def delete_recipe(id):","   flash('You can only delete your own recipe!')","# check for logged in user","   email = session.get('email')","   recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(id)})","   emailid = mongo.db.users.find({'email': email})","if not email:","   return redirect(url_for('register'))","   try:","      mongo.db.recipes.delete_one({\"_id\": ObjectId(id), 'email': emailid})","   except:","                       return redirect(url_for('get_recipes'))","return redirect(url_for('get_recipes'))"],"id":2355}],[{"start":{"row":115,"column":0},"end":{"row":115,"column":1},"action":"remove","lines":[" "],"id":2356}],[{"start":{"row":115,"column":0},"end":{"row":126,"column":43},"action":"insert","lines":["@app.route('/delete_recipe/recipe_id?=<id>')","def delete_recipe(id):","    flash('You can only delete your own recipe!')","        # check for logged in user","    email = session.get('email')","    if not email:","        return redirect(url_for('register'))","    try:","        mongo.db.recipes.delete_one({\"_id\": ObjectId(id), 'email': email})","    except:","        return redirect(url_for('recipes'))","    return redirect(url_for('get_recipes'))"],"id":2357}],[{"start":{"row":119,"column":32},"end":{"row":120,"column":0},"action":"insert","lines":["",""],"id":2358},{"start":{"row":120,"column":0},"end":{"row":120,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":120,"column":4},"end":{"row":120,"column":51},"action":"insert","lines":["emailid = mongo.db.users.find({'email': email})"],"id":2359}],[{"start":{"row":124,"column":72},"end":{"row":124,"column":73},"action":"insert","lines":["i"],"id":2360},{"start":{"row":124,"column":73},"end":{"row":124,"column":74},"action":"insert","lines":["d"]}],[{"start":{"row":126,"column":33},"end":{"row":126,"column":40},"action":"remove","lines":["recipes"],"id":2361},{"start":{"row":126,"column":33},"end":{"row":126,"column":44},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":120,"column":51},"end":{"row":121,"column":0},"action":"insert","lines":["",""],"id":2362},{"start":{"row":121,"column":0},"end":{"row":121,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":121,"column":4},"end":{"row":121,"column":36},"action":"insert","lines":["'recipe_author':session['email']"],"id":2363}],[{"start":{"row":121,"column":4},"end":{"row":121,"column":36},"action":"remove","lines":["'recipe_author':session['email']"],"id":2364}],[{"start":{"row":121,"column":0},"end":{"row":121,"column":4},"action":"remove","lines":["    "],"id":2365},{"start":{"row":120,"column":51},"end":{"row":121,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":124,"column":74},"end":{"row":124,"column":75},"action":"insert","lines":[","],"id":2366}],[{"start":{"row":124,"column":75},"end":{"row":124,"column":76},"action":"insert","lines":[" "],"id":2367}],[{"start":{"row":124,"column":76},"end":{"row":124,"column":108},"action":"insert","lines":["'recipe_author':session['email']"],"id":2368}],[{"start":{"row":100,"column":41},"end":{"row":100,"column":73},"action":"insert","lines":["'recipe_author':session['email']"],"id":2369}],[{"start":{"row":100,"column":73},"end":{"row":100,"column":74},"action":"insert","lines":[","],"id":2370}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":65},"action":"remove","lines":["["],"id":2371}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":65},"action":"insert","lines":["("],"id":2372}],[{"start":{"row":100,"column":73},"end":{"row":100,"column":74},"action":"insert","lines":[")"],"id":2373}],[{"start":{"row":100,"column":73},"end":{"row":100,"column":74},"action":"remove","lines":[")"],"id":2374},{"start":{"row":100,"column":72},"end":{"row":100,"column":73},"action":"remove","lines":["]"]}],[{"start":{"row":100,"column":72},"end":{"row":100,"column":73},"action":"insert","lines":[")"],"id":2375}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":65},"action":"remove","lines":["("],"id":2376}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":65},"action":"insert","lines":["{"],"id":2377}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":65},"action":"remove","lines":["{"],"id":2378}],[{"start":{"row":100,"column":64},"end":{"row":100,"column":65},"action":"insert","lines":["["],"id":2379}],[{"start":{"row":100,"column":72},"end":{"row":100,"column":73},"action":"remove","lines":[")"],"id":2380}],[{"start":{"row":100,"column":72},"end":{"row":100,"column":73},"action":"insert","lines":["]"],"id":2381}],[{"start":{"row":100,"column":41},"end":{"row":100,"column":42},"action":"insert","lines":["{"],"id":2382}],[{"start":{"row":100,"column":74},"end":{"row":100,"column":75},"action":"insert","lines":["}"],"id":2383}],[{"start":{"row":91,"column":60},"end":{"row":91,"column":61},"action":"insert","lines":[","],"id":2384}],[{"start":{"row":91,"column":61},"end":{"row":91,"column":62},"action":"insert","lines":[" "],"id":2385}],[{"start":{"row":91,"column":62},"end":{"row":91,"column":96},"action":"insert","lines":["{'recipe_author':session['email']}"],"id":2386}],[{"start":{"row":120,"column":4},"end":{"row":120,"column":5},"action":"insert","lines":["#"],"id":2387}],[{"start":{"row":120,"column":4},"end":{"row":120,"column":5},"action":"remove","lines":["#"],"id":2388}],[{"start":{"row":124,"column":73},"end":{"row":124,"column":74},"action":"remove","lines":["d"],"id":2399},{"start":{"row":124,"column":72},"end":{"row":124,"column":73},"action":"remove","lines":["i"]}],[{"start":{"row":120,"column":4},"end":{"row":120,"column":5},"action":"insert","lines":["#"],"id":2400}],[{"start":{"row":91,"column":62},"end":{"row":91,"column":96},"action":"remove","lines":["{'recipe_author':session['email']}"],"id":2401}],[{"start":{"row":91,"column":61},"end":{"row":91,"column":62},"action":"remove","lines":[" "],"id":2402},{"start":{"row":91,"column":60},"end":{"row":91,"column":61},"action":"remove","lines":[","]}],[{"start":{"row":0,"column":0},"end":{"row":207,"column":15},"action":"remove","lines":["# importing modules","import os","from flask import Flask, render_template, redirect, request, url_for, session, flash","from flask_pymongo import PyMongo, pymongo","from bson.objectid import ObjectId","","# declaring app name","app = Flask(__name__)","","app.config[\"SECRET_KEY\"] = '7473f88e01ba1bf3f40ce59c38d644ff'","","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://debapriya9b:Chotolok10@myfirstcluster-bsyfh.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/home')","def home():","    return render_template('home.html', title='Home', recipes=mongo.db.recipes.find().sort('recipe_views', pymongo.DESCENDING).limit(4))","    ","@app.route('/get_recipes', methods=['GET'])","def get_recipes():","    return render_template('recipes.html', title='All Recipes', recipes=mongo.db.recipes.find())","    #db.companies.find().skip(NUMBER_OF_ITEMS * (PAGE_NUMBER - 1)).limit(NUMBER_OF_ITEMS )","    #return render_template('recipes.html', title='All Recipes', recipes=mongo.db.recipes.find().skip(4 *  (1 - 1)).limit(6))","","@app.route('/get_starter', methods=['GET'])","def get_starter():","    return render_template('recipes.html', title='Starters', recipes=mongo.db.recipes.find({'recipe_category': 'Starter'}))","","@app.route('/get_main', methods=['GET'])","def get_main():","    return render_template('recipes.html', title='Main Dish', recipes=mongo.db.recipes.find({'recipe_category': 'Main'}))","","@app.route('/get_snacks', methods=['GET'])","def get_snacks():","    return render_template('recipes.html', title='Snacks', recipes=mongo.db.recipes.find({'recipe_category': 'Snacks'}))","","@app.route('/get_desserts', methods=['GET'])","def get_desserts():","    return render_template('recipes.html', title='Desserts', recipes=mongo.db.recipes.find({'recipe_category': 'Dessert'}))","    ","@app.route('/get_drinks', methods=['GET'])","def get_drinks():","    return render_template('recipes.html', title='Desserts', recipes=mongo.db.recipes.find({'recipe_category': 'Drinks'}))    ","","@app.route('/view/recipe_id?=<id>')","def view(id):","    ","    recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(id)})","    return render_template('view.html', title='View Full Recipe', recipe=recipe)","","    ","@app.route('/add_recipe')","def add_recipe():","    ","    #check for logged in user","    email = session.get('email')","    if not email:","        flash('You need to login to add your recipe!')","        return redirect(url_for('login'))","    return render_template('addrecipe.html',","    categories=mongo.db.categories.find(),","    difficulties=mongo.db.difficulties.find())","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","   print(request.form)","   print(request.form.getlist('recipe_ingredients[]'))","   print(request.form.getlist('recipe_procedure[]'))","   print(request.form.to_dict())","   recipes = mongo.db.recipes","   data = request.form.to_dict()","   data.update({'recipe_ingredients':request.form.getlist('recipe_ingredients[]')})","   data.update({'recipe_procedure':request.form.getlist('recipe_procedure[]')})","   del data['recipe_ingredients[]']","   del data['recipe_procedure[]']","   recipes.insert_one(data)","   flash('You have added your recipe successfully!!')","   return redirect(url_for('get_recipes'))"," "," ","@app.route('/edit_recipe/recipe_id?=<id>',methods=['GET'])","def edit_recipe(id):","    #check for logged in user","    email = session.get('email')","    if not email:","        return redirect(url_for('login'))","","    recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(id)}) ","    categories=mongo.db.categories.find()","    difficulties=mongo.db.difficulties.find()","    return render_template('editrecipe.html', title='Edit Recipe', recipe=recipe, categories=categories, difficulties=difficulties)","","","@app.route('/update_recipe/recipe_id?=<id>', methods=['POST'])","def update_recipe(id):","    recipe = mongo.db.recipes","    recipe.update( {'_id': ObjectId(id)},{'recipe_author':session['email']},","        {","        'recipe_name':request.form.get('recipe_name'),","        'recipe_description':request.form.get('recipe_description'),","        'recipe_ingredients':request.form.getlist('recipe_ingredients[]'),","        'recipe_procedure':request.form.getlist('recipe_procedure[]'),","        'recipe_category':request.form.get('recipe_category'),","        'recipe_time':request.form.get('recipe_time'),","        'recipe_recipe_difficulty_level':request.form.get('recipe_recipe_difficulty_level'),","        'recipe_author':request.form.get('recipe_author'),","        'recipe_image':request.form.get('recipe_image')","    })","    ","    return redirect(url_for('view', id=id))"," ","@app.route('/delete_recipe/recipe_id?=<id>')","def delete_recipe(id):","    flash('You can only delete your own recipe!')","        # check for logged in user","    email = session.get('email')","    #emailid = mongo.db.users.find({'email': email})","    if not email:","        return redirect(url_for('register'))","    try:","        mongo.db.recipes.delete_one({\"_id\": ObjectId(id), 'email': email, 'recipe_author':session['email']})","    except:","        return redirect(url_for('get_recipes'))","    return redirect(url_for('get_recipes'))","    ","","    ","    ","    ","","@app.route('/register', methods=['POST', 'GET'])","def register():","    '''Accepts POST and GET requests.","    If the request is a GET request, checks for a session email.","    If session email is found, the homepage is rendered.","    If no session email is found, the register template is rendered.","    If the request is a POST request, form data is retrieved.","    A check is performed to verify that the user email doesn't already exist.","    If the user already exists, the register page is rendered with a user_exists error.","    If a user does not exist, the user is added to the database and the login page is rendered.'''","","    # check for logged in user","    email = session.get('email')","    if email:","      return redirect(url_for('home'))","","    user = None","    if request.method == 'POST':","        name = request.form['name']","        email = request.form['email']","        password = request.form['password']","        user = {'name': name, 'email': email, 'password': password}","        flash('Congratulation!!You are registered now!')","        if mongo.db.users.find_one({\"email\": email}):","            return render_template('register.html', title='Register', error=\"user_exists\")","        else:","            mongo.db.users.insert_one(user)","            return render_template('login.html', title='Login', user=user, password=password)","          ","    return render_template('register.html', title='Register')","","","@app.route('/login', methods=['POST', 'GET'])","def login():","    # check for logged in user","    email = session.get('email')","    if email:","        return redirect(url_for('register'))","","    user = None","    if request.method == 'POST':","        email = request.form[\"email\"]","        user = mongo.db.users.find_one({\"email\": email})","","        try:","            assert(user[\"password\"] == request.form[\"password\"])","        except (AssertionError, TypeError):","            return render_template('login.html', title='Login', user=None, error=\"incorrect_login\")","        else:","            try:","                session['name'] = user['name']","            except KeyError:","                session['name'] = 'John Doe'","            session['email'] = email","            return redirect(url_for(\"home\"))","","    return render_template('login.html', title='Login', user=user)","","    ","    ","@app.route('/logout')","def logout():","    #  logout user and clear session","    session['email'] = None","    session['name'] = None","    # session.clear()","    return redirect(url_for('home'))","","","","if __name__=='__main__':","    app.run(host=os.environ.get('IP'),","    port=int(os.environ.get('PORT')),","    debug=True)"],"id":2403}],[{"start":{"row":0,"column":0},"end":{"row":207,"column":15},"action":"insert","lines":["# importing modules","import os","from flask import Flask, render_template, redirect, request, url_for, session, flash","from flask_pymongo import PyMongo, pymongo","from bson.objectid import ObjectId","","# declaring app name","app = Flask(__name__)","","app.config[\"SECRET_KEY\"] = '7473f88e01ba1bf3f40ce59c38d644ff'","","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://debapriya9b:Chotolok10@myfirstcluster-bsyfh.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/home')","def home():","    return render_template('home.html', title='Home', recipes=mongo.db.recipes.find().sort('recipe_views', pymongo.DESCENDING).limit(4))","    ","@app.route('/get_recipes', methods=['GET'])","def get_recipes():","    return render_template('recipes.html', title='All Recipes', recipes=mongo.db.recipes.find())","    #db.companies.find().skip(NUMBER_OF_ITEMS * (PAGE_NUMBER - 1)).limit(NUMBER_OF_ITEMS )","    #return render_template('recipes.html', title='All Recipes', recipes=mongo.db.recipes.find().skip(4 *  (1 - 1)).limit(6))","","@app.route('/get_starter', methods=['GET'])","def get_starter():","    return render_template('recipes.html', title='Starters', recipes=mongo.db.recipes.find({'recipe_category': 'Starter'}))","","@app.route('/get_main', methods=['GET'])","def get_main():","    return render_template('recipes.html', title='Main Dish', recipes=mongo.db.recipes.find({'recipe_category': 'Main'}))","","@app.route('/get_snacks', methods=['GET'])","def get_snacks():","    return render_template('recipes.html', title='Snacks', recipes=mongo.db.recipes.find({'recipe_category': 'Snacks'}))","","@app.route('/get_desserts', methods=['GET'])","def get_desserts():","    return render_template('recipes.html', title='Desserts', recipes=mongo.db.recipes.find({'recipe_category': 'Dessert'}))","    ","@app.route('/get_drinks', methods=['GET'])","def get_drinks():","    return render_template('recipes.html', title='Desserts', recipes=mongo.db.recipes.find({'recipe_category': 'Drinks'}))    ","","@app.route('/view/recipe_id?=<id>')","def view(id):","    ","    recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(id)})","    return render_template('view.html', title='View Full Recipe', recipe=recipe)","","    ","@app.route('/add_recipe')","def add_recipe():","    ","    #check for logged in user","    email = session.get('email')","    if not email:","        flash('You need to login to add your recipe!')","        return redirect(url_for('login'))","    return render_template('addrecipe.html',","    categories=mongo.db.categories.find(),","    difficulties=mongo.db.difficulties.find())","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","   print(request.form)","   print(request.form.getlist('recipe_ingredients[]'))","   print(request.form.getlist('recipe_procedure[]'))","   print(request.form.to_dict())","   recipes = mongo.db.recipes","   data = request.form.to_dict()","   data.update({'recipe_ingredients':request.form.getlist('recipe_ingredients[]')})","   data.update({'recipe_procedure':request.form.getlist('recipe_procedure[]')})","   del data['recipe_ingredients[]']","   del data['recipe_procedure[]']","   recipes.insert_one(data)","   flash('You have added your recipe successfully!!')","   return redirect(url_for('get_recipes'))"," "," ","@app.route('/edit_recipe/recipe_id?=<id>',methods=['GET'])","def edit_recipe(id):","    #check for logged in user","    email = session.get('email')","    if not email:","        return redirect(url_for('login'))","","    recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(id)}) ","    categories=mongo.db.categories.find()","    difficulties=mongo.db.difficulties.find()","    return render_template('editrecipe.html', title='Edit Recipe', recipe=recipe, categories=categories, difficulties=difficulties)","","","@app.route('/update_recipe/recipe_id?=<id>', methods=['POST'])","def update_recipe(id):","    recipe = mongo.db.recipes","    recipe.update( {'_id': ObjectId(id)},","        {","        'recipe_name':request.form.get('recipe_name'),","        'recipe_description':request.form.get('recipe_description'),","        'recipe_ingredients':request.form.getlist('recipe_ingredients[]'),","        'recipe_procedure':request.form.getlist('recipe_procedure[]'),","        'recipe_category':request.form.get('recipe_category'),","        'recipe_time':request.form.get('recipe_time'),","        'recipe_recipe_difficulty_level':request.form.get('recipe_recipe_difficulty_level'),","        'recipe_author':request.form.get('recipe_author'),","        'recipe_image':request.form.get('recipe_image')","    })","    ","    return redirect(url_for('view', id=id))"," ","@app.route('/delete_recipe/recipe_id?=<id>')","def delete_recipe(id):","    flash('You can only delete your own recipe!')","        # check for logged in user","    email = session.get('email')","    emailid = mongo.db.users.find({'email': email})","    if not email:","        return redirect(url_for('register'))","    try:","        mongo.db.recipes.delete_one({\"_id\": ObjectId(id), 'email': emailid})","    except:","        return redirect(url_for('recipes'))","    return redirect(url_for('get_recipes'))","    ","","    ","    ","    ","","@app.route('/register', methods=['POST', 'GET'])","def register():","    '''Accepts POST and GET requests.","    If the request is a GET request, checks for a session email.","    If session email is found, the homepage is rendered.","    If no session email is found, the register template is rendered.","    If the request is a POST request, form data is retrieved.","    A check is performed to verify that the user email doesn't already exist.","    If the user already exists, the register page is rendered with a user_exists error.","    If a user does not exist, the user is added to the database and the login page is rendered.'''","","    # check for logged in user","    email = session.get('email')","    if email:","      return redirect(url_for('home'))","","    user = None","    if request.method == 'POST':","        name = request.form['name']","        email = request.form['email']","        password = request.form['password']","        user = {'name': name, 'email': email, 'password': password}","        flash('Congratulation!!You are registered now!')","        if mongo.db.users.find_one({\"email\": email}):","            return render_template('register.html', title='Register', error=\"user_exists\")","        else:","            mongo.db.users.insert_one(user)","            return render_template('login.html', title='Login', user=user, password=password)","          ","    return render_template('register.html', title='Register')","","","@app.route('/login', methods=['POST', 'GET'])","def login():","    # check for logged in user","    email = session.get('email')","    if email:","        return redirect(url_for('register'))","","    user = None","    if request.method == 'POST':","        email = request.form[\"email\"]","        user = mongo.db.users.find_one({\"email\": email})","","        try:","            assert(user[\"password\"] == request.form[\"password\"])","        except (AssertionError, TypeError):","            return render_template('login.html', title='Login', user=None, error=\"incorrect_login\")","        else:","            try:","                session['name'] = user['name']","            except KeyError:","                session['name'] = 'John Doe'","            session['email'] = email","            return redirect(url_for(\"home\"))","","    return render_template('login.html', title='Login', user=user)","","    ","    ","@app.route('/logout')","def logout():","    #  logout user and clear session","    session['email'] = None","    session['name'] = None","    # session.clear()","    return redirect(url_for('home'))","","","","if __name__=='__main__':","    app.run(host=os.environ.get('IP'),","    port=int(os.environ.get('PORT')),","    debug=True)"],"id":2404}],[{"start":{"row":117,"column":4},"end":{"row":117,"column":49},"action":"remove","lines":["flash('You can only delete your own recipe!')"],"id":2405}],[{"start":{"row":125,"column":11},"end":{"row":126,"column":0},"action":"insert","lines":["",""],"id":2406},{"start":{"row":126,"column":0},"end":{"row":126,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":126,"column":8},"end":{"row":126,"column":53},"action":"insert","lines":["flash('You can only delete your own recipe!')"],"id":2407}],[{"start":{"row":121,"column":17},"end":{"row":122,"column":0},"action":"insert","lines":["",""],"id":2408},{"start":{"row":122,"column":0},"end":{"row":122,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":122,"column":8},"end":{"row":122,"column":53},"action":"insert","lines":["flash('You can only delete your own recipe!')"],"id":2409}],[{"start":{"row":122,"column":49},"end":{"row":122,"column":50},"action":"remove","lines":["e"],"id":2410},{"start":{"row":122,"column":48},"end":{"row":122,"column":49},"action":"remove","lines":["p"]},{"start":{"row":122,"column":47},"end":{"row":122,"column":48},"action":"remove","lines":["i"]},{"start":{"row":122,"column":46},"end":{"row":122,"column":47},"action":"remove","lines":["c"]},{"start":{"row":122,"column":45},"end":{"row":122,"column":46},"action":"remove","lines":["e"]},{"start":{"row":122,"column":44},"end":{"row":122,"column":45},"action":"remove","lines":["r"]},{"start":{"row":122,"column":43},"end":{"row":122,"column":44},"action":"remove","lines":[" "]},{"start":{"row":122,"column":42},"end":{"row":122,"column":43},"action":"remove","lines":["n"]},{"start":{"row":122,"column":41},"end":{"row":122,"column":42},"action":"remove","lines":["w"]},{"start":{"row":122,"column":40},"end":{"row":122,"column":41},"action":"remove","lines":["o"]},{"start":{"row":122,"column":39},"end":{"row":122,"column":40},"action":"remove","lines":[" "]},{"start":{"row":122,"column":38},"end":{"row":122,"column":39},"action":"remove","lines":["r"]},{"start":{"row":122,"column":37},"end":{"row":122,"column":38},"action":"remove","lines":["u"]},{"start":{"row":122,"column":36},"end":{"row":122,"column":37},"action":"remove","lines":["o"]},{"start":{"row":122,"column":35},"end":{"row":122,"column":36},"action":"remove","lines":["y"]},{"start":{"row":122,"column":34},"end":{"row":122,"column":35},"action":"remove","lines":[" "]},{"start":{"row":122,"column":33},"end":{"row":122,"column":34},"action":"remove","lines":["e"]},{"start":{"row":122,"column":32},"end":{"row":122,"column":33},"action":"remove","lines":["t"]},{"start":{"row":122,"column":31},"end":{"row":122,"column":32},"action":"remove","lines":["e"]},{"start":{"row":122,"column":30},"end":{"row":122,"column":31},"action":"remove","lines":["l"]},{"start":{"row":122,"column":29},"end":{"row":122,"column":30},"action":"remove","lines":["e"]},{"start":{"row":122,"column":28},"end":{"row":122,"column":29},"action":"remove","lines":["d"]},{"start":{"row":122,"column":27},"end":{"row":122,"column":28},"action":"remove","lines":[" "]},{"start":{"row":122,"column":26},"end":{"row":122,"column":27},"action":"remove","lines":["y"]},{"start":{"row":122,"column":25},"end":{"row":122,"column":26},"action":"remove","lines":["l"]},{"start":{"row":122,"column":24},"end":{"row":122,"column":25},"action":"remove","lines":["n"]},{"start":{"row":122,"column":23},"end":{"row":122,"column":24},"action":"remove","lines":["o"]},{"start":{"row":122,"column":22},"end":{"row":122,"column":23},"action":"remove","lines":[" "]}],[{"start":{"row":122,"column":21},"end":{"row":122,"column":22},"action":"remove","lines":["n"],"id":2411},{"start":{"row":122,"column":20},"end":{"row":122,"column":21},"action":"remove","lines":["a"]},{"start":{"row":122,"column":19},"end":{"row":122,"column":20},"action":"remove","lines":["c"]}],[{"start":{"row":122,"column":19},"end":{"row":122,"column":20},"action":"insert","lines":["n"],"id":2412},{"start":{"row":122,"column":20},"end":{"row":122,"column":21},"action":"insert","lines":["e"]},{"start":{"row":122,"column":21},"end":{"row":122,"column":22},"action":"insert","lines":["e"]},{"start":{"row":122,"column":22},"end":{"row":122,"column":23},"action":"insert","lines":["d"]}],[{"start":{"row":122,"column":23},"end":{"row":122,"column":24},"action":"insert","lines":[" "],"id":2413},{"start":{"row":122,"column":24},"end":{"row":122,"column":25},"action":"insert","lines":["t"]},{"start":{"row":122,"column":25},"end":{"row":122,"column":26},"action":"insert","lines":["o"]}],[{"start":{"row":122,"column":26},"end":{"row":122,"column":27},"action":"insert","lines":[" "],"id":2414},{"start":{"row":122,"column":27},"end":{"row":122,"column":28},"action":"insert","lines":["l"]},{"start":{"row":122,"column":28},"end":{"row":122,"column":29},"action":"insert","lines":["o"]},{"start":{"row":122,"column":29},"end":{"row":122,"column":30},"action":"insert","lines":["g"]},{"start":{"row":122,"column":30},"end":{"row":122,"column":31},"action":"insert","lines":["i"]},{"start":{"row":122,"column":31},"end":{"row":122,"column":32},"action":"insert","lines":["n"]}],[{"start":{"row":122,"column":32},"end":{"row":122,"column":33},"action":"insert","lines":[" "],"id":2415},{"start":{"row":122,"column":33},"end":{"row":122,"column":34},"action":"insert","lines":["t"]},{"start":{"row":122,"column":34},"end":{"row":122,"column":35},"action":"insert","lines":["o"]}],[{"start":{"row":122,"column":35},"end":{"row":122,"column":36},"action":"insert","lines":[" "],"id":2416},{"start":{"row":122,"column":36},"end":{"row":122,"column":37},"action":"insert","lines":["d"]}],[{"start":{"row":122,"column":37},"end":{"row":122,"column":38},"action":"insert","lines":["e"],"id":2417},{"start":{"row":122,"column":38},"end":{"row":122,"column":39},"action":"insert","lines":["l"]},{"start":{"row":122,"column":39},"end":{"row":122,"column":40},"action":"insert","lines":["e"]},{"start":{"row":122,"column":40},"end":{"row":122,"column":41},"action":"insert","lines":["t"]},{"start":{"row":122,"column":41},"end":{"row":122,"column":42},"action":"insert","lines":["e"]}],[{"start":{"row":122,"column":42},"end":{"row":122,"column":43},"action":"insert","lines":[" "],"id":2418},{"start":{"row":122,"column":43},"end":{"row":122,"column":44},"action":"insert","lines":["y"]},{"start":{"row":122,"column":44},"end":{"row":122,"column":45},"action":"insert","lines":["o"]},{"start":{"row":122,"column":45},"end":{"row":122,"column":46},"action":"insert","lines":["u"]}],[{"start":{"row":122,"column":46},"end":{"row":122,"column":47},"action":"insert","lines":["r"],"id":2419}],[{"start":{"row":122,"column":47},"end":{"row":122,"column":48},"action":"insert","lines":[" "],"id":2420},{"start":{"row":122,"column":48},"end":{"row":122,"column":49},"action":"insert","lines":["o"]},{"start":{"row":122,"column":49},"end":{"row":122,"column":50},"action":"insert","lines":["w"]},{"start":{"row":122,"column":50},"end":{"row":122,"column":51},"action":"insert","lines":["n"]}],[{"start":{"row":122,"column":51},"end":{"row":122,"column":52},"action":"insert","lines":[" "],"id":2421},{"start":{"row":122,"column":52},"end":{"row":122,"column":53},"action":"insert","lines":["r"]},{"start":{"row":122,"column":53},"end":{"row":122,"column":54},"action":"insert","lines":["e"]},{"start":{"row":122,"column":54},"end":{"row":122,"column":55},"action":"insert","lines":["c"]},{"start":{"row":122,"column":55},"end":{"row":122,"column":56},"action":"insert","lines":["i"]},{"start":{"row":122,"column":56},"end":{"row":122,"column":57},"action":"insert","lines":["p"]},{"start":{"row":122,"column":57},"end":{"row":122,"column":58},"action":"insert","lines":["e"]}],[{"start":{"row":123,"column":40},"end":{"row":123,"column":41},"action":"remove","lines":["r"],"id":2422},{"start":{"row":123,"column":39},"end":{"row":123,"column":40},"action":"remove","lines":["e"]},{"start":{"row":123,"column":38},"end":{"row":123,"column":39},"action":"remove","lines":["t"]},{"start":{"row":123,"column":37},"end":{"row":123,"column":38},"action":"remove","lines":["s"]},{"start":{"row":123,"column":36},"end":{"row":123,"column":37},"action":"remove","lines":["i"]},{"start":{"row":123,"column":35},"end":{"row":123,"column":36},"action":"remove","lines":["g"]},{"start":{"row":123,"column":34},"end":{"row":123,"column":35},"action":"remove","lines":["e"]},{"start":{"row":123,"column":33},"end":{"row":123,"column":34},"action":"remove","lines":["r"]}],[{"start":{"row":123,"column":33},"end":{"row":123,"column":34},"action":"insert","lines":["l"],"id":2423},{"start":{"row":123,"column":34},"end":{"row":123,"column":35},"action":"insert","lines":["o"]},{"start":{"row":123,"column":35},"end":{"row":123,"column":36},"action":"insert","lines":["g"]},{"start":{"row":123,"column":36},"end":{"row":123,"column":37},"action":"insert","lines":["i"]},{"start":{"row":123,"column":37},"end":{"row":123,"column":38},"action":"insert","lines":["n"]}],[{"start":{"row":128,"column":33},"end":{"row":128,"column":40},"action":"remove","lines":["recipes"],"id":2424},{"start":{"row":128,"column":33},"end":{"row":128,"column":44},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":131,"column":0},"end":{"row":132,"column":0},"action":"insert","lines":["",""],"id":2425},{"start":{"row":132,"column":0},"end":{"row":133,"column":0},"action":"insert","lines":["",""]},{"start":{"row":133,"column":0},"end":{"row":134,"column":0},"action":"insert","lines":["",""]},{"start":{"row":134,"column":0},"end":{"row":135,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":132,"column":0},"end":{"row":147,"column":39},"action":"insert","lines":["@app.route('/like/recipe_id?=<id>')","def like(id):","    '''Controls behavior of user-like increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"likes\": 1}})","    return redirect(url_for('recipes'))","","","@app.route('/dislike/recipe_id?=<id>')","def dislike(id):","    '''Controls behavior of user-dislike increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","    ","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"dislikes\": 1}})","    return redirect(url_for('recipes'))"],"id":2426}],[{"start":{"row":138,"column":29},"end":{"row":138,"column":36},"action":"remove","lines":["recipes"],"id":2427},{"start":{"row":138,"column":29},"end":{"row":138,"column":40},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":147,"column":29},"end":{"row":147,"column":36},"action":"remove","lines":["recipes"],"id":2428},{"start":{"row":147,"column":29},"end":{"row":147,"column":40},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":137,"column":79},"end":{"row":137,"column":80},"action":"remove","lines":["s"],"id":2429},{"start":{"row":137,"column":78},"end":{"row":137,"column":79},"action":"remove","lines":["e"]},{"start":{"row":137,"column":77},"end":{"row":137,"column":78},"action":"remove","lines":["k"]},{"start":{"row":137,"column":76},"end":{"row":137,"column":77},"action":"remove","lines":["i"]},{"start":{"row":137,"column":75},"end":{"row":137,"column":76},"action":"remove","lines":["l"]}],[{"start":{"row":137,"column":75},"end":{"row":137,"column":76},"action":"insert","lines":["r"],"id":2430},{"start":{"row":137,"column":76},"end":{"row":137,"column":77},"action":"insert","lines":["e"]},{"start":{"row":137,"column":77},"end":{"row":137,"column":78},"action":"insert","lines":["c"]},{"start":{"row":137,"column":78},"end":{"row":137,"column":79},"action":"insert","lines":["i"]},{"start":{"row":137,"column":79},"end":{"row":137,"column":80},"action":"insert","lines":["p"]},{"start":{"row":137,"column":80},"end":{"row":137,"column":81},"action":"insert","lines":["e"]},{"start":{"row":137,"column":81},"end":{"row":137,"column":82},"action":"insert","lines":["_"]}],[{"start":{"row":137,"column":82},"end":{"row":137,"column":83},"action":"insert","lines":["l"],"id":2431},{"start":{"row":137,"column":83},"end":{"row":137,"column":84},"action":"insert","lines":["i"]},{"start":{"row":137,"column":84},"end":{"row":137,"column":85},"action":"insert","lines":["k"]},{"start":{"row":137,"column":85},"end":{"row":137,"column":86},"action":"insert","lines":["e"]},{"start":{"row":137,"column":86},"end":{"row":137,"column":87},"action":"insert","lines":["s"]}],[{"start":{"row":146,"column":75},"end":{"row":146,"column":82},"action":"insert","lines":["recipe_"],"id":2432}],[{"start":{"row":137,"column":81},"end":{"row":137,"column":82},"action":"remove","lines":["_"],"id":2433},{"start":{"row":137,"column":80},"end":{"row":137,"column":81},"action":"remove","lines":["e"]},{"start":{"row":137,"column":79},"end":{"row":137,"column":80},"action":"remove","lines":["p"]},{"start":{"row":137,"column":78},"end":{"row":137,"column":79},"action":"remove","lines":["i"]},{"start":{"row":137,"column":77},"end":{"row":137,"column":78},"action":"remove","lines":["c"]},{"start":{"row":137,"column":76},"end":{"row":137,"column":77},"action":"remove","lines":["e"]},{"start":{"row":137,"column":75},"end":{"row":137,"column":76},"action":"remove","lines":["r"]}],[{"start":{"row":146,"column":81},"end":{"row":146,"column":82},"action":"remove","lines":["_"],"id":2434},{"start":{"row":146,"column":80},"end":{"row":146,"column":81},"action":"remove","lines":["e"]},{"start":{"row":146,"column":79},"end":{"row":146,"column":80},"action":"remove","lines":["p"]},{"start":{"row":146,"column":78},"end":{"row":146,"column":79},"action":"remove","lines":["i"]},{"start":{"row":146,"column":77},"end":{"row":146,"column":78},"action":"remove","lines":["c"]},{"start":{"row":146,"column":76},"end":{"row":146,"column":77},"action":"remove","lines":["e"]},{"start":{"row":146,"column":75},"end":{"row":146,"column":76},"action":"remove","lines":["r"]}],[{"start":{"row":132,"column":0},"end":{"row":147,"column":43},"action":"remove","lines":["@app.route('/like/recipe_id?=<id>')","def like(id):","    '''Controls behavior of user-like increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"likes\": 1}})","    return redirect(url_for('get_recipes'))","","","@app.route('/dislike/recipe_id?=<id>')","def dislike(id):","    '''Controls behavior of user-dislike increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","    ","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"dislikes\": 1}})","    return redirect(url_for('get_recipes'))"],"id":2435},{"start":{"row":132,"column":0},"end":{"row":147,"column":39},"action":"insert","lines":["@app.route('/like/recipe_id?=<id>')","def like(id):","    '''Controls behavior of user-like increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"likes\": 1}})","    return redirect(url_for('recipes'))","","","@app.route('/dislike/recipe_id?=<id>')","def dislike(id):","    '''Controls behavior of user-dislike increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","    ","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"dislikes\": 1}})","    return redirect(url_for('recipes'))"]}],[{"start":{"row":138,"column":29},"end":{"row":138,"column":36},"action":"remove","lines":["recipes"],"id":2436},{"start":{"row":138,"column":29},"end":{"row":138,"column":40},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":147,"column":29},"end":{"row":147,"column":36},"action":"remove","lines":["recipes"],"id":2437},{"start":{"row":147,"column":29},"end":{"row":147,"column":40},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":137,"column":80},"end":{"row":137,"column":81},"action":"remove","lines":["\""],"id":2438}],[{"start":{"row":137,"column":74},"end":{"row":137,"column":75},"action":"remove","lines":["\""],"id":2439}],[{"start":{"row":146,"column":83},"end":{"row":146,"column":84},"action":"remove","lines":["\""],"id":2440}],[{"start":{"row":146,"column":74},"end":{"row":146,"column":75},"action":"remove","lines":["\""],"id":2441}],[{"start":{"row":137,"column":74},"end":{"row":137,"column":75},"action":"insert","lines":["r"],"id":2442},{"start":{"row":137,"column":75},"end":{"row":137,"column":76},"action":"insert","lines":["e"]},{"start":{"row":137,"column":76},"end":{"row":137,"column":77},"action":"insert","lines":["c"]},{"start":{"row":137,"column":77},"end":{"row":137,"column":78},"action":"insert","lines":["i"]},{"start":{"row":137,"column":78},"end":{"row":137,"column":79},"action":"insert","lines":["p"]},{"start":{"row":137,"column":79},"end":{"row":137,"column":80},"action":"insert","lines":["e"]}],[{"start":{"row":137,"column":80},"end":{"row":137,"column":81},"action":"insert","lines":["_"],"id":2443}],[{"start":{"row":137,"column":80},"end":{"row":137,"column":81},"action":"remove","lines":["_"],"id":2444},{"start":{"row":137,"column":79},"end":{"row":137,"column":80},"action":"remove","lines":["e"]},{"start":{"row":137,"column":78},"end":{"row":137,"column":79},"action":"remove","lines":["p"]},{"start":{"row":137,"column":77},"end":{"row":137,"column":78},"action":"remove","lines":["i"]},{"start":{"row":137,"column":76},"end":{"row":137,"column":77},"action":"remove","lines":["c"]},{"start":{"row":137,"column":75},"end":{"row":137,"column":76},"action":"remove","lines":["e"]},{"start":{"row":137,"column":74},"end":{"row":137,"column":75},"action":"remove","lines":["r"]}],[{"start":{"row":137,"column":74},"end":{"row":137,"column":75},"action":"insert","lines":["p"],"id":2445},{"start":{"row":137,"column":75},"end":{"row":137,"column":76},"action":"insert","lines":["y"]},{"start":{"row":137,"column":76},"end":{"row":137,"column":77},"action":"insert","lines":["m"]},{"start":{"row":137,"column":77},"end":{"row":137,"column":78},"action":"insert","lines":["o"]},{"start":{"row":137,"column":78},"end":{"row":137,"column":79},"action":"insert","lines":["n"]},{"start":{"row":137,"column":79},"end":{"row":137,"column":80},"action":"insert","lines":["g"]}],[{"start":{"row":137,"column":80},"end":{"row":137,"column":81},"action":"insert","lines":["o"],"id":2446},{"start":{"row":137,"column":81},"end":{"row":137,"column":82},"action":"insert","lines":["."]}],[{"start":{"row":146,"column":74},"end":{"row":146,"column":81},"action":"insert","lines":["pymongo"],"id":2447}],[{"start":{"row":146,"column":81},"end":{"row":146,"column":82},"action":"insert","lines":["."],"id":2448}],[{"start":{"row":132,"column":0},"end":{"row":147,"column":43},"action":"remove","lines":["@app.route('/like/recipe_id?=<id>')","def like(id):","    '''Controls behavior of user-like increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {pymongo.likes: 1}})","    return redirect(url_for('get_recipes'))","","","@app.route('/dislike/recipe_id?=<id>')","def dislike(id):","    '''Controls behavior of user-dislike increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","    ","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {pymongo.dislikes: 1}})","    return redirect(url_for('get_recipes'))"],"id":2449},{"start":{"row":132,"column":0},"end":{"row":147,"column":39},"action":"insert","lines":["@app.route('/like/recipe_id?=<id>')","def like(id):","    '''Controls behavior of user-like increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"likes\": 1}})","    return redirect(url_for('recipes'))","","","@app.route('/dislike/recipe_id?=<id>')","def dislike(id):","    '''Controls behavior of user-dislike increment and decrements operator.","    Feature is dependant upon user interaction in the user-interface.'''","    ","    mongo.db.recipes.find_one_and_update({\"_id\": ObjectId(id)}, {\"$inc\": {\"dislikes\": 1}})","    return redirect(url_for('recipes'))"]}],[{"start":{"row":147,"column":29},"end":{"row":147,"column":36},"action":"remove","lines":["recipes"],"id":2450},{"start":{"row":147,"column":29},"end":{"row":147,"column":40},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":138,"column":29},"end":{"row":138,"column":36},"action":"remove","lines":["recipes"],"id":2451},{"start":{"row":138,"column":29},"end":{"row":138,"column":40},"action":"insert","lines":["get_recipes"]}],[{"start":{"row":148,"column":0},"end":{"row":148,"column":1},"action":"insert","lines":[" "],"id":2452},{"start":{"row":148,"column":1},"end":{"row":148,"column":2},"action":"insert","lines":[" "]},{"start":{"row":148,"column":2},"end":{"row":148,"column":3},"action":"insert","lines":[" "]},{"start":{"row":148,"column":3},"end":{"row":148,"column":4},"action":"insert","lines":[" "]}],[{"start":{"row":148,"column":4},"end":{"row":148,"column":80},"action":"insert","lines":["return render_template('view.html', title='View Full Recipe', recipe=recipe)"],"id":2453}]]},"ace":{"folds":[],"scrolltop":1754,"scrollleft":0,"selection":{"start":{"row":148,"column":4},"end":{"row":148,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":24,"state":"start","mode":"ace/mode/python"}},"timestamp":1568637226514,"hash":"c07321b5f4f9bd15741a9a7e0903a12b83bd0003"}